import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;

public class StonePaperScissorsGUI extends JFrame {
    private JButton stoneButton, paperButton, scissorsButton;
    private JLabel resultLabel;

    public StonePaperScissorsGUI() {
        setTitle("Stone Paper Scissors");
        setSize(300, 200);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        JPanel buttonPanel = new JPanel(new GridLayout(1, 3, 10, 10)); // Panel for buttons
        stoneButton = new JButton("Stone");
        paperButton = new JButton("Paper");
        scissorsButton = new JButton("Scissors");
        buttonPanel.add(stoneButton);
        buttonPanel.add(paperButton);
        buttonPanel.add(scissorsButton);

        resultLabel = new JLabel("Result will be displayed here");
        resultLabel.setHorizontalAlignment(SwingConstants.CENTER);

        add(buttonPanel, BorderLayout.CENTER);
        add(resultLabel, BorderLayout.SOUTH);

        // Add action listeners to buttons
        stoneButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                playGame("stone");
            }
        });

        paperButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                playGame("paper");
            }
        });

        scissorsButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                playGame("scissors");
            }
        });
    }

    private void playGame(String userChoice) {
        String[] choices = {"stone", "paper", "scissors"};
        Random random = new Random();
        int index = random.nextInt(choices.length);
        String computerChoice = choices[index];

        String result = determineWinner(userChoice, computerChoice);
        resultLabel.setText("You chose " + userChoice + ". Computer chose " + computerChoice + ". " + result);
    }

    private String determineWinner(String userChoice, String computerChoice) {
        if (userChoice.equals(computerChoice)) {
            return "It's a tie!";
        } else if ((userChoice.equals("stone") && computerChoice.equals("scissors")) ||
                (userChoice.equals("paper") && computerChoice.equals("stone")) ||
                (userChoice.equals("scissors") && computerChoice.equals("paper"))) {
            return "You win!";
        } else {
            return "Computer wins!";
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                new StonePaperScissorsGUI().setVisible(true);
            }
        });
    }
}
